// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/domain/interfaces/infrastructure/machine_repository.go
//
// Generated by this command:
//
//	mockgen -source=./internal/domain/interfaces/infrastructure/machine_repository.go -destination ./internal/tests/mocks/machine_repository.go
//

// Package mock_infrastructure is a generated GoMock package.
package mock_infrastructure

import (
	context "context"
	models "dockMon/internal/domain/models"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockMachineRepository is a mock of MachineRepository interface.
type MockMachineRepository struct {
	ctrl     *gomock.Controller
	recorder *MockMachineRepositoryMockRecorder
	isgomock struct{}
}

// MockMachineRepositoryMockRecorder is the mock recorder for MockMachineRepository.
type MockMachineRepositoryMockRecorder struct {
	mock *MockMachineRepository
}

// NewMockMachineRepository creates a new mock instance.
func NewMockMachineRepository(ctrl *gomock.Controller) *MockMachineRepository {
	mock := &MockMachineRepository{ctrl: ctrl}
	mock.recorder = &MockMachineRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMachineRepository) EXPECT() *MockMachineRepositoryMockRecorder {
	return m.recorder
}

// All mocks base method.
func (m *MockMachineRepository) All(ctx context.Context) ([]*models.Machine, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All", ctx)
	ret0, _ := ret[0].([]*models.Machine)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockMachineRepositoryMockRecorder) All(ctx any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockMachineRepository)(nil).All), ctx)
}

// Put mocks base method.
func (m *MockMachineRepository) Put(ctx context.Context, machine *models.Machine) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Put", ctx, machine)
	ret0, _ := ret[0].(error)
	return ret0
}

// Put indicates an expected call of Put.
func (mr *MockMachineRepositoryMockRecorder) Put(ctx, machine any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Put", reflect.TypeOf((*MockMachineRepository)(nil).Put), ctx, machine)
}
